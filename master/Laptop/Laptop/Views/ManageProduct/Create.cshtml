@model Laptop.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<h2>Thêm</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Sản phẩm</h4>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.productName, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.productName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.productName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productType, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.productType, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.productType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shortDescription, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.shortDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.shortDescription)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.longDescription, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.longDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.longDescription)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.warrantyPeriod, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.warrantyPeriod, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.warrantyPeriod)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cd_DVD, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.cd_DVD, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cd_DVD)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.camera, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.camera, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.camera)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.wifi, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.wifi, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.wifi)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.os, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.os, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.os)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.battery, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.battery, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.battery)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ram, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.ram, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ram)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.unitPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.unitPrice, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.unitPrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isNoLonger, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.isNoLonger, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.isNoLonger)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isNew, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.isNew, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.isNew)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isHot, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.isHot, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.isHot)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isSale, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.isSale, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.isSale)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.quantity, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.quantity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imageSrc, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <img id="blah" class="img-responsive" alt="">
                <input type="file" id="myfiles" onchange="getFiles(); readURL(this);" />
                <input id="display" name="imageSrc" hidden="hidden">
                <br />
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.importPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.importPrice, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.importPrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManufName, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownList("Manufacturer", ViewData["Manufacturer"] as List<SelectListItem>, null, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScreenName, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownList("Screen", ViewData["Screen"] as List<SelectListItem>, null, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPUName, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
               @Html.DropDownList("CPU", ViewData["CPU"] as List<SelectListItem>, null, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPUName, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownList("HardDrive", ViewData["HardDrive"] as List<SelectListItem>, null, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Tạo mới" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah')
                    .attr('src', e.target.result)
                    
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>
<script type="text/javascript">
    function getFiles() {
        // Get input element
        myFileList = document.getElementById("myfiles");
        // loop through files property, using length to get number of files chosen

        document.getElementById("display").value = "" + myFileList.value.substring(12)

    }
</script>
<div>
    @Html.ActionLink("Trở về", "Index")
</div>
